name: seatunnel

services:
  seatunnel-master:
    image: apache/seatunnel:2.3.9
    container_name: seatunnel_master
    environment:
      - ST_DOCKER_MEMBER_LIST=172.16.0.2,172.16.0.3,172.16.0.4
    entrypoint: >
      /bin/sh -c "
      /opt/seatunnel/bin/seatunnel-cluster.sh -r master
      "
    ports:
      - "8080:8080"
      - "5801:5801"
    networks:
      seatunnel_network:
        ipv4_address: 172.16.0.2
    volumes:
      - ./config/seatunnel.yaml:/opt/seatunnel/config/seatunnel.yaml
      - ./plugins:/opt/seatunnel/plugins

  seatunnel-worker1:
    image: apache/seatunnel:2.3.9
    container_name: seatunnel_worker_1
    environment:
      - ST_DOCKER_MEMBER_LIST=172.16.0.2,172.16.0.3,172.16.0.4
    entrypoint: >
      /bin/sh -c "
      /opt/seatunnel/bin/seatunnel-cluster.sh -r worker
      "
    depends_on:
      - seatunnel-master
    networks:
      seatunnel_network:
        ipv4_address: 172.16.0.3

  seatunnel-worker2:
    image: apache/seatunnel:2.3.9
    container_name: seatunnel_worker_2
    environment:
      - ST_DOCKER_MEMBER_LIST=172.16.0.2,172.16.0.3,172.16.0.4
    entrypoint: >
      /bin/sh -c "
      /opt/seatunnel/bin/seatunnel-cluster.sh -r worker
      "
    depends_on:
      - seatunnel-master
    networks:
      seatunnel_network:
        ipv4_address: 172.16.0.4

  seatunnel-client:
    image: apache/seatunnel:2.3.9
    container_name: seatunnel_client
    environment:
      - ST_DOCKER_MEMBER_LIST=172.16.0.2:5801
    # keep the container running
    entrypoint: >
      /bin/sh -c "
      tail -f /dev/null
      "

    networks:
      seatunnel_network:
        ipv4_address: 172.16.0.10

    volumes:
      - ./jobs:/opt/seatunnel/jobs

  mysql:
    image: mysql:9.2.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: test
      MYSQL_USER: test
      MYSQL_PASSWORD: test
      MYSQL_DATABASE: test
    ports:
      - "3306:3306"
    # networks:
    #   seatunnel_network:
    #     ipv4_address: 172.16.0.100
    # volumes:
    #   - ./mysql:/docker-entrypoint-initdb.d

  postgres:
    restart: always
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
    # networks:
    #   seatunnel_network:
    #     ipv4_address: 172.16.0.100

  # doris-fe:
  #   image: apache/doris.fe-ubuntu:3.0.3
  #   hostname: fe
  #   environment:
  #     - FE_SERVERS=fe1:127.0.0.1:9010
  #     - FE_ID=1
  #   network_mode: host
  # doris-be:
  #   image: apache/doris.be-ubuntu:3.0.3
  #   hostname: be
  #   environment:
  #     - FE_SERVERS=fe1:127.0.0.1:9010
  #     - BE_ADDR=127.0.0.1:9050
  #   depends_on:
  #     - fe
  #   network_mode: host

networks:
  seatunnel_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.0.0/24
